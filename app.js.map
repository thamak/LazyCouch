{"version":3,"sources":["app.js","app.ts"],"names":[],"mappings":"AAAA;;ACGA,IAAY,UAAO,QAAM,SAAN,CAAnB;AACA,IAAY,aAAU,QAAM,aAAN,CAAtB;AACA,IAAY,eAAY,QAAM,cAAN,CAAxB;AACA,IAAY,iBAAc,QAAM,iBAAN,CAA1B;AAEA,IAAY,SAAM,QAAM,gBAAN,CAAlB;AAGA,IAAI,MAAM,SAAV;AAGA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,SAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACA,IAAI,GAAJ,CAAQ,cAAR,EAAwB,EAAE,QAAQ,KAAV,EAAxB;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,IAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,gBAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,YAAY,SAA3B,CAAR;AAEA,IAAI,MAAM,QAAQ,GAAR,CAAY,QAAZ,IAAwB,aAAlC;AACA,IAAI,QAAQ,aAAZ,EAA2B;AACvB,QAAI,GAAJ,CAAQ,cAAR;AACH;AAGD,IAAI,GAAJ,CAAQ,GAAR,EAAa,OAAO,KAApB;AAEA,IAAI,MAAJ,CAAW,IAAX,EAAiB,YAAA;AACb,YAAQ,GAAR,CAAY,kDAAZ,EAAgE,IAAhE,EAAsE,IAAI,QAAJ,CAAa,GAAnF;AACA,YAAQ,GAAR,CAAY,UAAZ,EAAwB,IAAxB,EAA8B,IAAI,QAAJ,CAAa,GAA3C;AACH,CAHD;AAKW,QAAA,GAAA,GAAM,GAAN","file":"app.js","sourcesContent":["\"use strict\";\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst errorHandler = require(\"errorhandler\");\nconst methodOverride = require(\"method-override\");\nconst routes = require(\"./routes/index\");\nvar app = express();\napp.set(\"views\", \"./views\");\napp.set(\"view engine\", \"jade\");\napp.set(\"view options\", { layout: false });\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(methodOverride());\napp.use(express.static(__dirname + \"/public\"));\nlet env = process.env.NODE_ENV || \"development\";\nif (env === \"development\") {\n    app.use(errorHandler());\n}\napp.get('/', routes.index);\napp.listen(4000, () => {\n    console.log(\"LazyCouch server listening on port %d in %s mode\", 4000, app.settings.env);\n    console.log(\"test def\", 4000, app.settings.env);\n});\nexports.App = app;\n","//import * as http from \"http\";\r\n//import * as url from \"url\";\r\nimport * as path from 'path';\r\nimport * as express from \"express\";\r\nimport * as bodyParser from \"body-parser\";\r\nimport * as errorHandler from \"errorhandler\";\r\nimport * as methodOverride from \"method-override\";\r\n\r\nimport * as routes from \"./routes/index\";\r\n// import * as db from \"./database/db\";\r\n\r\nvar app = express();\r\n\r\n// Configuration\r\napp.set(\"views\", \"./views\");\r\napp.set(\"view engine\", \"jade\");\r\napp.set(\"view options\", { layout: false });\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(methodOverride());\r\napp.use(express.static(__dirname + \"/public\"));\r\n\r\nlet env = process.env.NODE_ENV || \"development\";\r\nif (env === \"development\") {\r\n    app.use(errorHandler());\r\n}\r\n\r\n// Routes\r\napp.get('/', routes.index);\r\n\r\napp.listen(4000, () => {\r\n    console.log(\"LazyCouch server listening on port %d in %s mode\", 4000, app.settings.env);\r\n    console.log(\"test def\", 4000, app.settings.env);\r\n});\r\n\r\nexport let App = app;"],"sourceRoot":"/source/"}